[app]
    appName="boundary"
[trace]
    agentAddr="192.168.136.109:6831"
    stdout=false
[log]
    enableHost=false  #Add host name and other additional fields
    encode="console"    #json / console
    level="debug"    #debug  info  warn  error fatal
    callFull=false
    stdout=true

[log.file]
    enableHost=true
    encode="json"
    callFull=true
    level="debug"
    fileName="service.log"   #为空时不启用file log
    maxSize=5                #single log file size MB
    maxAge=14                #time to keep, (day)
    maxBackups=30            #max file numbers
    localTime=true           #日志归档文件名是当地时间命名
    compress=false           #是否压缩

[log.kafka]      #需要配置好kafka brokers 地址
     enable=true #是否开启输出到kafka
     enableHost=true
     encode="json"
     callFull=true
     level="debug"
     topic="service-log"

[kafka]
    brokers = ["192.168.136.109:9092"]

[jwt]
    JWTSecret="asdasadfsad2f6f235&^$*%&*(&*^*-*-+sf68sdf68"
    CSRFSecret="asdasadfsadasda2f6f235&^fawefsfsdf+sf68sdf68"
    SignMethod="HS256" #[HS256|HS384|HS512]
    TTL="8760h" #不想写自动刷新，直接一年有效期 o(^▽^)o

[http]
    network = "tcp"
    addr = ":8080"
    readTimeout = "2s"
    writeTimeout = "2s"
    timeout="5s"

[etcd] #如果使用etcd注册服务发现的话，需要配置该项
    endpoints=["192.168.136.109:2379","192.168.136.109:2479","192.168.136.109:2579"]
    userName=""
    passwd=""
    leaseTTL="5"   #5秒续约一次
    dialTimeout="5" #连接超时时间
    prefix="micro_srv" #服务注册目录前缀

[registry]
    driver="etcd" #暂时只支持etcd和直连(direct)
    loadBalance="round_robin" #客户端负载均衡方式
[registry.direct]
    article_service="0.0.0.0:9000" # [ 服务名=>grpc地址 ]
    #user_service="0.0.0.0:9002" # [ 服务名=>grpc地址 ]

[db]
    driver = "mysql"
	dsn = "root:123456@tcp(192.168.136.109:3306)/blog?timeout=1s&readTimeout=1s&writeTimeout=1s&parseTime=true&loc=Local&charset=utf8mb4,utf8"
	active = 500
	idle = 10
	idleTimeout =24 #hour
	logMode = true #是否打开gorm debug输出
	sTable = true  #SingularTable  如果设置为true,`User`的默认表名为`user`,使用`TableName`设置的表名不受影响
	tablePrefix="mc_" #这个不要改，改了G了，代码不规范，里面很多代码固定的前缀，到时候直接去掉前缀

[redis]
	proto = "tcp"
	addr = "192.168.136.109:6379"
	db = 1
	passwd = ""
	idle = 10
	active = 500
	idleTimeout = "30" # second
	lifetime = 4 # hour

[elastic]
    urls = ["http://192.168.136.109:9200"]
    userName=""
    passWd=""
    sniff = false

[qiniu]
    accessKey="xxxxx"
    secretKey="xxxxxx"
    Bucket="xxxxx"
    UrlHost="https://xxxx.com"

