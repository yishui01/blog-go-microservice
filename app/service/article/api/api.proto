syntax = "proto3";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";


package article.service.v1;


//文章列表
message ArtListRequest {
     int64 pageNum = 1 [(gogoproto.moretags) = 'form:"pageNum" json:"pageNum" validate:"numeric,min=1"'];
     int32 pageSize = 2 [(gogoproto.moretags) = 'form:"pageSize" json:"pageSize" validate:"numeric,min=1"'];
     string keyword = 3;
     string tags = 4;
     int32 status = 5;
     string order = 6;
     int64 createdAt = 7;
     int64 updatedAt = 8;
     bool unscoped = 9;
     string terms = 10;
}

message ArtListResp {
    int64 total=1 [(gogoproto.jsontag) = "total"];
    repeated ArtDetailResp lists = 2;
    int64 page = 3 [(gogoproto.jsontag) = "page"];
    int32 size = 4 [(gogoproto.jsontag) = "size"];
}


//文章详情
message ArtDetailRequest {
    string sn = 1 [(gogoproto.moretags) = 'validate:"required"'];
}

message ArtDetailResp {
    int64  id      = 1 [(gogoproto.jsontag) = "id"];
    string sn      = 2 [(gogoproto.jsontag) = "sn"];
    string title   = 3 [(gogoproto.jsontag) = "title"];
    string img     = 4 [(gogoproto.jsontag) = "img"];
    string content = 5 [(gogoproto.jsontag) = "content"];
    int32  status  = 6 [(gogoproto.jsontag) = "status"];
    int64 created_at = 7 [(gogoproto.jsontag) = "created_at"];
    int64 updated_at = 8 [(gogoproto.jsontag) = "updated_at"];
    int64 deleted_at = 9 [(gogoproto.jsontag) = "deleted_at"];
    string tags    = 10 [(gogoproto.jsontag) = "tags"];
    int32 ord      = 11 [(gogoproto.jsontag) = "ord"];
    int64 view_count = 12 [(gogoproto.jsontag) = "view_count"];
    int64 cm_count = 13 [(gogoproto.jsontag) = "cm_count"];
    int64 laud_count = 14 [(gogoproto.jsontag) = "laud_count"];
}

//添加/修改文章
message SaveArtReq {
    int64  id      = 1;
    string sn      = 2;
    string title   = 3 [(gogoproto.moretags) = 'validate:"required"'];
    string img     = 4 ;
    string content = 5 [(gogoproto.moretags) = 'validate:"required"'];
    int32  status  = 6;
    string tags    = 7;
    int64 created_at = 8 [(gogoproto.moretags) = 'validate:"min=0"'];
    int64 updated_at = 9 [(gogoproto.moretags) = 'validate:"min=0"'];
    int64 view_count = 12;
    int64 cm_count = 13;
    int64 laud_count = 14;
}

//公共save/delete 响应
message SaveResp {
    int64  status     = 1;
    string data       = 2;
    string msg        = 3;
}

//删除文章
message DelArtRequest {
    int64 id = 1 [(gogoproto.moretags) = 'validate:"required"'];
    bool   physical = 2; //是否为物理删除，false为软删除
}





//Tag列表请求
message TagListReq {
    string keyword = 1;
}
//Tag列表响应
message TagListResp {
    repeated TagDetailResp lists = 1;
}
//单个Tag请求
message TagDetailReq {
    int64 id = 1 [(gogoproto.moretags) = 'validate:"required"'];
}
//单个Tag响应
message TagDetailResp {
    int64  id = 1;
    string name = 2;
    int64  created_at = 3;
    int64  updated_at = 4;
    int64  deleted_at = 5;
}
//添加/修改Tag请求
message SaveTagReq {
    int64  id      = 1 [(gogoproto.moretags) = 'validate:"min=0"'];
    string name    = 2 [(gogoproto.moretags) = 'validate:"required"'];
    int64  created_at = 3 [(gogoproto.moretags) = 'validate:"min=0"'];
    int64  updated_at = 4 [(gogoproto.moretags) = 'validate:"min=0"'];
}
//删除Tag请求
message DelTagReq {
    int64 id = 1 [(gogoproto.moretags) = 'validate:"required"'];
    bool   physical = 2; //是否为物理删除，false为软删除
}




service Article {
    rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);

    rpc ArtList(ArtListRequest)returns(ArtListResp){
        option(google.api.http) = {
            get:"/article/pagenum/{pageNum}/pagesize/{pageSize}/keyword/{keyword}/tags/{tags}/status/{status}/order/{order}/unscoped/{unscoped}/terms/{terms}"
        };
    }
    rpc GetArtBySn(ArtDetailRequest) returns (ArtDetailResp){
        option(google.api.http) = {
            get:"/article/sn/{sn}"
        };
    };
    rpc CreateArt(SaveArtReq) returns (SaveResp){
        option(google.api.http) = {
            post:"/article/create"
            body:"*"
        };
    };
    rpc UpdateArt(SaveArtReq) returns (SaveResp){
        option(google.api.http) = {
            post:"/article/update"
            body:"*"
        };
    };
    rpc DeleteArt(DelArtRequest) returns (SaveResp){
        option(google.api.http) = {
            post:"/article/delete/id/{id}/physical/{physical}"
        };
    };



    rpc TagList(TagListReq)returns(TagListResp){
        option(google.api.http) = {
            get:"/tag/{keyword}"
        };
    }

    rpc CreateTag(SaveTagReq) returns (SaveResp){
        option(google.api.http) = {
            post:"/tag/create"
            body:"*"
        };
    };
    rpc UpdateTag(SaveTagReq) returns (SaveResp){
        option(google.api.http) = {
            post:"/tag/update"
            body:"*"
        };
    };
    rpc DeleteTag(DelTagReq) returns (SaveResp){
        option(google.api.http) = {
            post:"/tag/id/{id}/physical/{physical}"
        };
    };



}